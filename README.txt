# Tragamonedas MVC con Concurrencia üé∞

Un juego de tragamonedas implementado en Java usando el patr√≥n Model-View-Controller (MVC) y t√©cnicas de concurrencia.

## Caracter√≠sticas Principales
- ‚úÖ Patr√≥n MVC bien definido
- üåÄ Concurrencia con SwingWorker y ExecutorService
- üéÆ Interfaz gr√°fica con Swing
- üçí S√≠mbolos estilo emoji
- üí∞ Sistema de apuestas y cr√©ditos
- üîÑ Actualizaci√≥n en tiempo real de la UI

## Requisitos
- Java JDK 11 o superior
- Maven (opcional)
- Sistema operativo con soporte para emojis

## Instalaci√≥n y Ejecuci√≥n

### M√©todo 1: Ejecutar directamente
```bash
# Compilar
javac -d . src/com/mycompany/tragmone/*.java

# Ejecutar
java com.mycompany.tragmone.TragMone

bash
mvn clean compile exec:java

src/
  com/mycompany/tragmone/
    TragMone.java         # Clase principal
    Symbol.java           # Modelo: Representaci√≥n de s√≠mbolos
    Reel.java             # Modelo: L√≥gica de rodillos
    SlotMachine.java      # Modelo: N√∫cleo del juego
    SlotMachineViewGUI.java # Vista: Interfaz gr√°fica
    SlotMachineController.java # Controlador: Mediador MVC
    GameThread.java       # Concurrencia: Hilos de ejecuci√≥n

Implementaci√≥n de Concurrencia
SwingWorker: Para operaciones de larga duraci√≥n (simulaci√≥n de giro)

ExecutorService: Pool de hilos para gesti√≥n de tareas

SwingUtilities.invokeLater: Actualizaciones seguras de la UI

// Ejemplo de implementaci√≥n concurrente
ExecutorService executor = Executors.newFixedThreadPool(2);
executor.execute(new GameThread(controller));

